<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ticketing">
	
	<!-- 지역 맵 -->
	<resultMap class="cinemalocationVo" id="LocationMap">
		<result property="cinemaVO.cinema_location" column="cinema_location"/>
		<result property="cinema_cnt" column="cinema_cnt"/>
	</resultMap>
	
	<!-- 상영 일자 맵-->
	<resultMap class="screenDateVo" id="ScreenDateMap">
		<result property="screen.screen_code" 		column="screen_code"/>
		<result property="screen.screen_date" 		column="screen_date"/>
		<result property="screen.screen_time" 		column="screen_time"/>
		<result property="movie.movie_title" 		column="movie_title"/>
		<result property="movie.movie_spectator" 	column="movie_spectator"/>
		<result property="theater.theater_seat_num" column="theater_seat_num"/>
		<result property="theater.theater_name" 	column="theater_name"/>
		<result property="cur_seat" 				column="cur_seat"/>	
	</resultMap>	
	
	<!-- 지역 리스트 반환 -->
	<select id="getLocationList" resultMap="LocationMap">
		SELECT CINEMA_LOCATION
			 , COUNT(*) AS CINEMA_CNT
		FROM   CINEMA
        GROUP BY CINEMA_LOCATION
        ORDER BY CINEMA_LOCATION
	</select>
			
	<!-- 영화관 리스트 반환 -->
	<select id="getCinemaList" resultClass="cinemaVo">
		SELECT CINEMA_CODE
			 , CINEMA_NAME
			 , CINEMA_LOCATION
		FROM   CINEMA
		ORDER BY CINEMA_LOCATION, CINEMA_NAME
	</select>
	
	<!-- 영화관 지점에 따른 영화 리스트 반환 -->
	<select id="getMoviesByCinemaNameAndMovieTitle" parameterClass="Map" resultClass="movieVo">
		SELECT DISTINCT M.MOVIE_TITLE, M.MOVIE_CODE, M.MOVIE_SPECTATOR
		FROM SCREEN S
        	INNER JOIN THEATER TH ON S.THEATER_CODE = TH.THEATER_CODE
        	INNER JOIN CINEMA C ON TH.CINEMA_CODE = C.CINEMA_CODE
        	INNER JOIN MOVIE M ON S.MOVIE_CODE = M.MOVIE_CODE
        <dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="cinema_name">
				C.CINEMA_NAME = #cinema_name#
			</isNotNull>
			<isNotNull prepend="AND" property="movie_title">
				M.MOVIE_TITLE = #movie_title#
			</isNotNull>
        </dynamic>
	</select>
	
	<!-- 영화관 지점의 상영시간 리스트 반환 -->
	<select id="findAllScreenListByCinemaName" parameterClass="Map" resultMap="ScreenDateMap">
		SELECT sc.screen_code
		    ,  m.movie_title
		    ,  m.movie_spectator
		    , sc.screen_date
		    , sc.screen_time
		    , th.theater_seat_num
		    , th.theater_name,
		    (
		      SELECT 156 - count(*)
		      FROM screen s INNER JOIN movie_ticket mt ON s.screen_code = mt.screen_code 
		      WHERE mt.mt_status = '선택가능' AND s.screen_code = sc.screen_code
		     ) cur_seat    
		FROM screen sc 
		              INNER JOIN theater th ON sc.theater_code = th.theater_code
		              INNER JOIN cinema c ON th.cinema_code = c.cinema_code
		              INNER JOIN movie m on sc.movie_code = m.movie_code
        <dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="cinema_name">
				C.CINEMA_NAME = #cinema_name#
			</isNotNull>
			<isNotNull prepend="AND" property="movie_title">
				M.MOVIE_TITLE = #movie_title#
			</isNotNull>
			<isNotNull prepend="AND" property="screen_date">
				SC.SCREEN_DATE = #screen_date#
			</isNotNull>
        </dynamic>
		ORDER BY m.movie_title		
	</select>
	
	<!-- 선택한 영화의 정보 반환-->
	<!--
	<select id="getMovieInfoByScreenCode" parameterClass="String" resultMap="movieInfoMap">
		SELECT m.movie_title
			,  s.screen_date
			,  s.screen_time
			,  TO_TIMESTAMP(TO_CHAR(screen_time + (.000694 * m.movie_runtime), 'YYYY-MM-DD HH24:MI'),
                            'YYYY-MM-DD HH24:MI:SS') as END_TIME
			,  c.cinema_name
			,  th.theater_name
			,  m.movie_spectator
		FROM screen s 
     		 INNER JOIN movie m ON s.movie_code = m.movie_code
     		 INNER JOIN theater th ON s.theater_code = th.theater_code
     		 INNER JOIN cinema c ON th.cinema_code = c.cinema_code
		WHERE s.screen_code = #screen_code#
	</select>
	-->
	
	<!-- 선택한 영화 예매-->
	<!--
	<insert id="insertTickting" parameterClass="ticketingVo">
		<selectKey keyProperty="ticket_num" resultClass="int">
			SELECT TICKET_NUM_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TICKETING(TICKET_NUM
							, TICKET_DATE
							, TICKET_CNT
							, TICKET_PRICE
							, MEM_CODE
							, SCREEN_CODE)
        VALUES(TICKET_NUM_SEQ.NEXTVAL
             , #ticket_date#
             , #ticket_cnt#
             , #ticket_price#
             , #mem_code#
             , #screen_code#)
	</insert>
	-->
		
	<!-- 영화표 생성 -->
	<!--
	<insert id="insertMovieTicket" parameterClass="ticketingVo">
			
	</insert>
	-->
</sqlMap>			





